
consorcio

ctrl + espacio para el autocompletado.

command + shift + 7 - auto comentario

--

HTML5 incluye:
Video
Audio
Canvas(dibujar)
Guardar datos en navegador
etiquetas semánticas -> son para los SEO

ejemplos:
header
nav
etc.

SEO -> Search engine optimization

www3c
html4 es el actual aprobado

robots.txt - > rutas relativas o carpetas que no quieres que el buscador indexe
O sea que no quieres que lo encuentre google.


no meter secciones dentro de otra seccion
no meter seccion dentro de articulos


Mobile first

CSS = Hojas de estilo en cascada = maquetado = maquetacion

html = estructura + contenido
html + diseño = css3


En un formulario se captura la información.


Get: Se van a ir los datos a traves de la url y son visibles

El signo de interrogacion significa primer parametro

Espacio es %20

Del segundo parametro en adelante es &

validar entradas con expresiones regulares (pattern)

post no envían los datos en el url


No utilizar las fuentes de la maquina por default.
Utilizar gratuitas e internas.

Deben ser sans seriff.

La serif tiene adornos :v

fonts.google.com


-------

JavaScript

Lenguaje de programación

Validaciones del lado del cliente

Agrega otra capa de programacion que permite el manejo de formularios

*Se integra con HTML para validaciones.
*LiveScript (menos poderoso)
*Sintaxis JAVA. (if, for, while, etc..)
*Punto y coma es opcional (recomendado)
*Elimina el ocultamiento (Se mira el codigo del lado del cliente)
*Existe JavaScript del lado del servidor en distintas aplicaciones.


Funcion anonima, funcion que sse asigna a una variable y no tiene nombre


---
Node.js es un motor

npm junto con node
https://www.npmjs.com/
Documentacion de nodejs

https://nodejs.org/es/

usar main.js en lugar de index.js porque se puede confundir

npm install electron --save-dev
instala electron y lo guarda en la carpeta
y es de desarrollo

sudo npm install electron-packager --save-dev

scripts:
"start": "electron .",


Cuando cambias de SO entonces borras la carpeta
node_modules y ejecutas el npm install
y se instalan todas las dependencias que estén agregadas
al package.json

instalar como ya produccion:
npm install --save electron-require
electron-packager . --overwrite


https://randomuser.me/

↑ ↑ ↓ ↓ ← → ← → B A

json = javascript object notation

https://http.cat/
http://developer.marvel.com/
choosealicense.com
https://jsonlint.com/ //JSON VALIDATOR
http://gateway.marvel.com/v1/public/characters?ts=1&apikey=67788e74df746a1523d8ebb504ee1008&hash=cf5ec9bfa5a156f031a69417cd0e012c&nameStartsWith=
https://iconverticons.com/
http://ajaxload.info/
------

npm init

package.json
en start agregar: "start": "electron .",

//desarrollador
npm install electron --save-dev
npm install electron-require --save-dev
npm install jquery --save-dev
npm install electron-packager --save-dev
npm install asar --save-dev

//produccion
lalalal --save

-----
electron-packager . <Nombre de la APP> --overwrite
//sustituye la carpeta app por app.asar para evitar
que vean el codigo fuente.
electron-packager . <Nombre de la APP> --overwrite --asar
electron-packager . <Nombre de la APP> --overwrite --asar --icon=logo.icns


//Para empaquetar.
npm run paquete




-------------------

php

frontend:
  html
  css
  js

backend:




X = SO (Linux, windows, mac)
  = LAMPP, WAMPP, MAMMP
A = APACHE(Servidor web)
M = MariaDB
P = PHP (Procesador de hipertexto)
P = PERL (Lenguaje de programacion)


manager-osx -> xampp

echo es un comando para depuracion
manda a pantalla y a consola


bd:

create database pw2171

cotejamiento: utf8_general_ci

--todas las tablas se deben poner en plural
CREATE TABLE `pw2171`.`usuarios`
( `usuario` CHAR(20) NOT NULL ,
`nombre` VARCHAR(90) NOT NULL ,
`clave` CHAR(32) NOT NULL ,
`departamento` INT NOT NULL ,
`vigencia` INT NOT NULL )
ENGINE = InnoDB;

si se requiere velocidad usar char
pero si quieres espacio varchar

para una llave primaria o es char o int.


http://www.md5.cz/ <- generar clave cifrada

12345 : 827ccb0eea8a706c4c34a16891f84e7b


INSERT INTO `pw2171`.`usuarios`
(`usuario`, `nombre`, `clave`,
`departamento`, `vigencia`) VALUES
('pw', 'Usuario Ejemplo',
'827ccb0eea8a706c4c34a16891f84e7b', '1', '1');

ALTER TABLE `usuarios` ADD `identificador` INT NOT NULL AUTO_INCREMENT FIRST, ADD PRIMARY KEY (`identificador`);


cursor: variable que apunta al registro actual
cuando no hay nada apunta a los dos (BoF y EoF)

al principio apunta a la marca: BOF (Begin of file)
y al final apunta a la marca: EoF (End of File)
